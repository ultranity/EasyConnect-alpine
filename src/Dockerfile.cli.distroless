# Extract dependencies
#FROM busybox:glibc as busybox
#RUN for j in busybox --list-full; do \
#    mkdir -p $j && ln -s /bin/busybox $j; done
    
FROM debian:buster-slim AS deb_extractor
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8 \
    DEBIAN_CODENAME=buster \
    DEBIAN_MIRROR=http://mirrors.163.com/debian
    
COPY dpkg.cfg.excludes /etc/dpkg/dpkg.cfg.d/01_excludes
#COPY ./getdeps.sh /tmp/getdeps.sh
#RUN ./getdeps.sh adduser libgcc1 libc6 libstdc++6 tini busybox iptables psmisc dante-server
RUN echo "deb $DEBIAN_MIRROR $DEBIAN_CODENAME main contrib" > /etc/apt/sources.list \
    && apt-get update \
    && apt install busybox
#    && cd /bin && rm sh && ln -s busybox sh
#    && apt install apt-rdepends \ 
#    && apt-get download $(apt-rdepends -s=DEPENDS bash busybox tini iptables psmisc dante-server)\
#    && apt-get install -d --reinstall -y coreutils base-files debianutils debianutils
RUN cd /tmp \
    && apt-get install -d --reinstall -y \
       libc6 libgcc1 gcc-8-base libstdc++6 libtinfo6 base-files \
       bash tini psmisc busybox iptables \
       dante-server libpam0g libpam-pwdfile libaudit1 libaudit-common libcap-ng0 \
    && mkdir -p ./dpkg/var/lib/dpkg/status.d \
    && for pkg in /var/cache/apt/archives/*.deb; do \
        package_name=$(dpkg-deb -I ${pkg} | awk '/^ Package: .*$/ {print $2}'); \
        echo "Process: ${package_name}"; \
        dpkg --ctrl-tarfile $pkg | tar -Oxf - ./control > ./dpkg/var/lib/dpkg/status.d/${package_name}; \
        dpkg --extract $pkg ./dpkg || exit 10; \
    done \
    && rm -r ./dpkg/usr/share/doc/* ./dpkg/usr/share/man/* ./dpkg/usr/share/locale/* \
    && cd /tmp/dpkg/usr/bin && rm tini-static \
    && cd /tmp/dpkg/usr/sbin && ln -s danted sockd \
    && busybox --install -s /tmp/dpkg/bin
#    && cp /bin/sh /tmp/dpkg/bin/sh
#    && find /tmp/dpkg/ -type d -empty -delete \

#FROM gcr.io/distroless/base
FROM gcr.io/distroless/cc-debian10:latest AS runtime
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
COPY --from=deb_extractor /tmp/dpkg /
RUN rm -r /usr/share/doc/ /usr/share/man/  /usr/share/info/  /usr/share/common-licenses/  /usr/share/gcc-8/  /usr/share/gdb/
    


#FROM scratch
ADD ./easyconn_resources_x64_7.6-378.tar.gz /usr/share/sangfor/EasyConnect/
#COPY --from=runtime / /
ADD ./easyconnect.sh /usr/bin/easyconnect.sh

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
# Use a non-root user: slightly more secure (defense in depth)
#USER nobody
WORKDIR /
EXPOSE 1080

ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["easyconnect.sh", "2"]
